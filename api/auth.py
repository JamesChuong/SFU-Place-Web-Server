from firebase_admin import auth
from flask import request, jsonify
from functools import wraps


def authenticate_token(f):
    """
    Decorator that verifies the ID token generated by Firebase,
    use this to protect routes that require authentication
    """
    @wraps(f)
    def decorated(*args, **kwargs):

        token = None

        auth_header = request.headers.get('Authorization')

        if auth_header and auth_header.startswith('Bearer '):
            token = auth_header.split(' ')[1]   # Get the token

        if not token:

            return jsonify({'message': 'No ID Token Found'}), 401

        try:

            verified_token = auth.verify_id_token(token)
            request.user = verified_token

        except Exception as e:

            return jsonify({'message': str(e)}), 401

        return f(*args, **kwargs)

    return decorated

